default_platform(:ios)

platform :ios do
  before_all do
    setup_circle_ci
  end

  desc "Runs all the tests"
  lane :test do
    scan(
      scheme: "Game",
      devices: ["iPhone 16"],
      output_directory: "output/scan",
      code_coverage: true
    )
  end

  desc "Ad-hoc build"
  lane :adhoc do
    # Import certificates from S3
    import_certificate(
      certificate_path: "certificates/cert.p12",
      certificate_password: ENV['CERTIFICATE_PASSWORD'],
      keychain_name: "fastlane_tmp_keychain",
      keychain_password: ENV["MATCH_KEYCHAIN_PASSWORD"]
    )
    
    # Update provisioning profiles
    update_project_provisioning(
      xcodeproj: "Game.xcodeproj",
      profile: "certificates/*.mobileprovision",
      build_configuration: "Release"
    )
    
    # Build for ad-hoc distribution
    gym(
      scheme: "Game",
      export_method: "ad-hoc",
      output_directory: "output",
      output_name: "Game.ipa"
    )
  end

  desc "Submit a new Beta Build to Apple TestFlight"
  lane :beta do
    UI.message("üöÄ Starting TestFlight build process...")
    
    # Debug credentials (without exposing password)
    UI.message("Using Apple ID: #{ENV['FASTLANE_USER']}")
    UI.message("Team ID: #{ENV['APPLE_TEAM_ID']}")
    UI.message("App Identifier: com.circleci.ios-game")
    
    if ENV['FASTLANE_PASSWORD'].nil? || ENV['FASTLANE_PASSWORD'].empty?
      UI.error("‚ùå FASTLANE_PASSWORD is not set!")
      raise "FASTLANE_PASSWORD environment variable is required"
    else
      UI.message("‚úÖ Password is configured (length: #{ENV['FASTLANE_PASSWORD'].length})")
    end
    
    UI.message("üì± Fetching latest TestFlight build number...")
    
    # Get the latest TestFlight build number with authentication
    begin
      latest_build = latest_testflight_build_number(
        username: ENV['FASTLANE_USER'],
        team_id: ENV['APPLE_TEAM_ID'],
        app_identifier: "com.circleci.ios-game"
      )
      UI.message("Latest build number: #{latest_build}")
    rescue => ex
      UI.message("No previous builds found or error fetching: #{ex}")
      latest_build = 0
    end
    
    # Increment build number
    new_build_number = latest_build + 1
    UI.message("Setting new build number to: #{new_build_number}")
    
    increment_build_number(
      build_number: new_build_number
    )
    
    UI.message("üîê Setting up certificates and provisioning profiles...")
    
    # Import the certificates we downloaded from S3
    import_certificate(
      certificate_path: "certificates/cert.p12",
      certificate_password: ENV["CERTIFICATE_PASSWORD"],
      keychain_name: "fastlane_tmp_keychain",
      keychain_password: ENV["MATCH_KEYCHAIN_PASSWORD"]
    )
    
    # Use the provisioning profiles we downloaded from S3
    update_project_provisioning(
      xcodeproj: "Game.xcodeproj",
      profile: "certificates/*.mobileprovision",
      build_configuration: "Release"
    )
    
    UI.message("üî® Building the app...")
    
    # Build the app for App Store distribution
    gym(
      scheme: "Game",
      export_method: "app-store",
      export_options: {
        provisioningProfiles: {
          "com.circleci.ios-game" => "match AppStore com.circleci.ios-game"
        }
      },
      output_directory: "output",
      output_name: "Game.ipa"
    )
    
    UI.message("üì§ Uploading to TestFlight...")
    
    # Upload to TestFlight with authentication
    pilot(
      username: ENV['FASTLANE_USER'],
      team_id: ENV['APPLE_TEAM_ID'],
      app_identifier: "com.circleci.ios-game",
      skip_waiting_for_build_processing: true,
      changelog: "Build #{new_build_number} - Automated CI/CD build"
    )
    
    UI.message("üè∑Ô∏è Tagging release...")
    
    # Tag the release in git
    add_git_tag(
      tag: "v#{get_version_number}-#{new_build_number}"
    )
    
    UI.success("‚úÖ Beta build complete! Build #{new_build_number} uploaded to TestFlight")
  end
  
  desc "Test Apple ID authentication"
  lane :test_auth do
    UI.message("Testing Apple ID authentication...")
    UI.message("Username: #{ENV['FASTLANE_USER']}")
    UI.message("Team ID: #{ENV['APPLE_TEAM_ID']}")
    
    begin
      latest_build = latest_testflight_build_number(
        username: ENV['FASTLANE_USER'],
        team_id: ENV['APPLE_TEAM_ID'],
        app_identifier: "com.circleci.ios-game"
      )
      UI.success("‚úÖ Authentication successful! Latest build number: #{latest_build}")
    rescue => ex
      UI.error("‚ùå Authentication failed: #{ex}")
      UI.error("Please verify:")
      UI.error("1. FASTLANE_USER is correct Apple ID")
      UI.error("2. FASTLANE_PASSWORD is an app-specific password")
      UI.error("3. Apple ID has access to this app in App Store Connect")
      UI.error("4. APPLE_TEAM_ID is correct")
    end
  end
end