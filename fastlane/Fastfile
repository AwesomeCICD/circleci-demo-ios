default_platform(:ios)

platform :ios do
  before_all do
    setup_circle_ci
  end

  desc "Runs all the tests"
  lane :test do
    scan(
      scheme: "Game",
      devices: ["iPhone 16"],
      output_directory: "output/scan",
      code_coverage: true
    )
  end

  desc "Ad-hoc build"
  lane :adhoc do
    match(type: "adhoc")
    gym(export_method: "ad-hoc")
  end

  desc "Submit a new Beta Build to Apple TestFlight"
  desc "This will also make sure the profile is up to date"
  lane :beta do
    # testing variables
    UI.message("Using username: #{ENV['FASTLANE_USER']}")
    UI.message("Team ID: #{ENV['APPLE_TEAM_ID']}")

    if ENV['FASTLANE_PASSWORD'].nil? || ENV['FASTLANE_PASSWORD'].empty?
        UI.error("FASTLANE_PASSWORD is not set")
        next
    else
        UI.message("Password is this long: (#{ENV['FASTLANE_PASSWORD'].length})")
    end

    ENV['FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD'] = ENV['FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD']

    # Get the latest TestFlight build number with authentication
    latest_build = latest_testflight_build_number(
      username: ENV['FASTLANE_USER'],
      team_id: ENV['APPLE_TEAM_ID'],
      app_identifier: "com.circleci.ios-game"
    )
    
    # Increment build number locally
    increment_build_number(
      build_number: latest_build + 1
    )
    
    # Import the certificates we downloaded from S3
    import_certificate(
      certificate_path: "certificates/login.keychain-db",
      keychain_name: "login.keychain",
      keychain_password: ENV["MATCH_KEYCHAIN_PASSWORD"]
    )
    
    # Use the provisioning profiles we downloaded from S3
    update_project_provisioning(
      xcodeproj: "Game.xcodeproj",
      profile: "certificates/*.mobileprovision",
      build_configuration: "Release"
    )
    
    # Build the app
    gym(
      scheme: "Game",
      export_method: "app-store",
      export_options: {
        provisioningProfiles: {
          "com.circleci.ios-game" => "match AppStore com.circleci.ios-game"
        }
      },
      output_directory: "output"
    )
    
    # Upload to TestFlight with authentication
    pilot(
      username: ENV['FASTLANE_USER'],
      team_id: ENV['APPLE_TEAM_ID'],
      app_identifier: "com.circleci.ios-game",
      skip_waiting_for_build_processing: true
    )
    
    # Tag the release in git
    add_git_tag(
      tag: "v#{get_version_number}-#{get_build_number}"
    )
  end
  
  desc "Setup certificates for local development"
  lane :setup_certs do
    UI.important("This is a placeholder lane for certificate setup.")
    UI.message("For CI, certificates are managed via the CircleCI S3 download process.")
    UI.message("For local development, you may want to implement a custom certificate handling process here.")
  end
end